

# Linguagem Utilizada para Desenvolver a Aplicação
language: python

# Versão que a aplicação suporta.
python:
  - "3.7.9"

before_install:
- openssl aes-256-cbc -K $encrypted_9e7e0a4c6639_key -iv $encrypted_9e7e0a4c6639_iv
  -in labdevopscloudlucas-1c5f7563aff7.json.enc -out ../labdevopscloudlucas-1c5f7563aff7.json
  -d

#Build Environments
os: linux
dist: xenial

install:
  - pip install flask flask-wtf

jobs:
  include:
    - stage: Build

      name: "Testes Unitarios"
      # Instalação de Módulos que são necessários para a Aplicação.
      install:
        - pip install flask flask-wtf coverage
      script:  # Defini o script de Teste que deve rodar toda vez que o código for alterado.
        - coverage run test.py || travis_terminate 1;
        - coverage report app.py || travis_terminate 1;
        - coverage xml app.py || travis_terminate 1;

    - stage: STG Deploy
      script: skip
      # Definir o Deploy no Heroku
      deploy:
        provider: heroku
        strategy: api
        api_key: $HEROKU_API_KEY
        edge: true
        app: devopslab-lucascamargo
        on:
          branch: main

    - stage: STG TEST
      script:
        - curl https://devopslab-lucascamargo.herokuapp.com/ | grep Hello || travis_terminate 1;

    - stage: PROD Deploy
      script: skip
      # Definir o Deploy no Google Cloud
      deploy:
        provider: gae
        keyfile: ../labdevopscloudlucas-1c5f7563aff7.json
        project: labdevopscloudlucas
        on:
          branch: main

    - stage: PROD TEST
      script:
        - curl labdevopscloudlucas.uc.r.appspot.com | grep Hello || travis_terminate 1;

addons:
  sonarcloud:
    organization: lucascmrg
    token: ${SONAR_TOKEN}

# Defini o script de Teste que deve rodar toda vez que o código for alterado.                                                                                                                            
script:                                                                                                                                                                                                  
  - python -m unittest -v test || travis_terminate 1;
  - sonar-scanner || travis_terminate 1;

